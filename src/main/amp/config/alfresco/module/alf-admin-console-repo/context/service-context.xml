<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<beans>

	<!-- A simple class that is initialized by Spring -->
	<bean id="com.acme.adminconsole.exampleBean" class="com.acme.adminconsole.demoamp.Demo"
		init-method="init" />

	<!-- A simple module component that will be executed once. Note. this module 
		component will only be executed once, and then there will be an entry for 
		it in the Repo. So doing for example $ mvn clean install -Pamp-to-war twice 
		will only execute this component the first time. You need to remove /alf_data_dev 
		for it to be executed again. -->
	<bean id="com.acme.adminconsole.exampleComponent" class="com.acme.adminconsole.demoamp.DemoComponent"
		parent="module.baseComponent">
		<property name="moduleId" value="alf-admin-console-repo" />  <!-- See module.properties -->
		<property name="name" value="exampleComponent" />
		<property name="description" value="A demonstration component" />
		<property name="sinceVersion" value="1.0" />
		<property name="appliesFromVersion" value="1.0" />
		<property name="nodeService" ref="NodeService" />
		<property name="nodeLocatorService" ref="nodeLocatorService" />
	</bean>


	<!-- JMX MBean, Alfresco > RepositoryUsage -->
	<bean id="RepositoryUsageResource" parent="managedResource">
		<property name="resource">
			<bean class="com.acme.adminconsole.extension.RepositoryUsage">
				<property name="repositoryUsageService" ref="repositoryUsageService" />
				<property name="transactionService" ref="transactionService" />
			</bean>
		</property>
	</bean>

    <bean id="repositoryUsageService"
        class="com.acme.adminconsole.extension.RepositoryUsageServiceImpl">
        <property name="repositoryUsageDAO" ref="repositoryUsageDAO" />
    </bean>

    <bean id="repositoryUsageDAO" class="com.acme.adminconsole.extension.RepositoryUsageDAOImpl">
        <property name="cannedQueryDAO" ref="acme.cannedQueryDAO" />
    </bean>

	<bean id="acme.cannedQueryDAO"
		class="org.alfresco.repo.domain.query.ibatis.CannedQueryDAOImpl"
		init-method="init">
		<property name="sqlSessionTemplate" ref="acme.repoSqlSessionTemplate" />
		<property name="controlDAO" ref="controlDAO" />
	</bean>

    <bean id="acme.repoSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="acme.repoSqlSessionFactory"/>
    </bean>

    <!-- MyBatis config -->
    <bean id="acme.repoSqlSessionFactory" class="org.alfresco.ibatis.HierarchicalSqlSessionFactoryBean">
        <property name="resourceLoader" ref="dialectResourceLoader"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation">
            <value>classpath:alfresco/extension/ibatis/acme-alfresco-SqlMapConfig.xml</value>
        </property>
    </bean>

</beans>
